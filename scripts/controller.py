import pygame as pg
from .dialogue import DialogueSystem
from .scoring import Score
from .ui import TextInput
from .progress_bar import ProgressBar
from .img_gen import ImageGen
from clients import stable_diffusion


class GameController:
    def __init__(self, win_size) -> None:
        self.win_size = win_size
        self.round = 0
        self.dialouge_sys = DialogueSystem()
        self.score = Score(self.round+1)
        self.timer = ProgressBar(200, 30, 60*20)
        self.text_input = TextInput((self.win_size[0]//2 - 60*len("pizza")/2, self.win_size[1]*8/10), "pizza")
        self.img_gen_client = ImageGen()

        self.dialouges = ["Ladies and gentlemen, welcome to AI-Eye, the game show where artificial intelligence meets human intuition! I am your host, the one and only robotic mastermind.",
                          " In this game, you'll be challenged to guess images generated by advanced AI algorithms. ",
                          "With my lightning-fast processing power, I'll be guiding you through each round as you put your visual recognition skills to the test.",
                          " So get ready to see if you can outsmart the machine and guess the AI-generated images. Let the games begin!"]

        self.cur_dialouge = 0
        self.ingame = False

    def to_ingame(self):
        self.dialouge_sys.visible = False
        self.text_input.visible =True

    def update(self, events):
        self.dialouge_sys.update(events)
        self.timer.update()
        self.text_input.update(events)
        for event in events:
            if not self.ingame:
        
                if event.type == pg.KEYDOWN and event.key == pg.K_x:
                    if self.cur_dialouge >= len(self.dialouges):
                        self.ingame = True
                        self.to_ingame()
                    else:
                        self.dialouge_sys.start_talking(self.dialouges[self.cur_dialouge], 4)
                        self.cur_dialouge += 1



        # if self.text_input.
        # self.img_gen_client.update(events, self.text_input.get_cur_word())

    def draw(self, win : pg.Surface):
        self.dialouge_sys.draw(win)
        self.score.draw(win)
        self.timer.draw(win, win.get_width() // 2 - self.timer.width // 2, win.get_height() - 50)
        self.text_input.draw(win)
        self.img_gen_client.draw(win)